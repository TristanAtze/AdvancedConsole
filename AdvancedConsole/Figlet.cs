using System;
using System.Collections.Generic;
using System.Linq;

namespace AdvancedConsole;

/// <summary>
/// Minimal built-in 5-line "block" font (A-Z, 0-9, basic punctuation).
/// For full FIGlet support you can plug in custom fonts later.
/// </summary>
public static class Figlet
{
    private static readonly Dictionary<char, string[]> Font = new()
{
    // Very small block letters (5 lines). Add as needed.
    ['A'] = new[] { "  ██  ", " █  █ ", " ████ ", " █  █ ", " █  █ " },
    ['B'] = new[] { " ███  ", " █  █ ", " ███  ", " █  █ ", " ███  " },
    ['C'] = new[] { "  ███ ", " █    ", " █    ", " █    ", "  ███ " },
    ['D'] = new[] { " ███  ", " █  █ ", " █  █ ", " █  █ ", " ███  " },
    ['E'] = new[] { " ████ ", " █    ", " ███  ", " █    ", " ████ " },
    ['F'] = new[] { " ████ ", " █    ", " ███  ", " █    ", " █    " },
    ['G'] = new[] { "  ███ ", " █    ", " █ ██ ", " █  █ ", "  ███ " },
    ['H'] = new[] { " █  █ ", " █  █ ", " ████ ", " █  █ ", " █  █ " },
    ['I'] = new[] { " ███ ", "  █  ", "  █  ", "  █  ", " ███ " },
    ['J'] = new[] { "   ██ ", "    █ ", "    █ ", " █  █ ", "  ██  " },
    ['K'] = new[] { " █  █ ", " █ █  ", " ██   ", " █ █  ", " █  █ " },
    ['L'] = new[] { " █    ", " █    ", " █    ", " █    ", " ████ " },
    ['M'] = new[] { " █  █ ", " ██ ██", " █ ██ ", " █  █ ", " █  █ " },
    ['N'] = new[] { " █  █ ", " ██ █ ", " █ ██ ", " █  █ ", " █  █ " },
    ['O'] = new[] { "  ██  ", " █  █ ", " █  █ ", " █  █ ", "  ██  " },
    ['P'] = new[] { " ███  ", " █  █ ", " ███  ", " █    ", " █    " },
    ['Q'] = new[] { "  ██  ", " █  █ ", " █  █ ", " █ ██ ", "  ███ " },
    ['R'] = new[] { " ███  ", " █  █ ", " ███  ", " █ █  ", " █  █ " },
    ['S'] = new[] { "  ███ ", " █    ", "  ██  ", "    █ ", " ███  " },
    ['T'] = new[] { " █████", "   █  ", "   █  ", "   █  ", "   █  " },
    ['U'] = new[] { " █  █ ", " █  █ ", " █  █ ", " █  █ ", "  ██  " },
    ['V'] = new[] { " █  █ ", " █  █ ", " █  █ ", "  ██  ", "  ██  " },
    ['W'] = new[] { " █  █ ", " █  █ ", " █ ██ ", " ██ ██", " █  █ " },
    ['X'] = new[] { " █  █ ", "  ██  ", "  ██  ", "  ██  ", " █  █ " },
    ['Y'] = new[] { " █  █ ", "  ██  ", "   █  ", "   █  ", "   █  " },
    ['Z'] = new[] { " ████ ", "   ██ ", "  ██  ", " ██   ", " ████ " },
    ['0'] = new[] { "  ██  ", " █  █ ", " █ ██ ", " █  █ ", "  ██  " },
    ['1'] = new[] { "  ██  ", " █ █  ", "   █  ", "   █  ", " ████ " },
    ['2'] = new[] { "  ██  ", " █  █ ", "   █  ", "  █   ", " ████ " },
    ['3'] = new[] { " ███  ", "    █ ", "  ██  ", "    █ ", " ███  " },
    ['4'] = new[] { " █  █ ", " █  █ ", " ████ ", "    █ ", "    █ " },
    ['5'] = new[] { " ████ ", " █    ", " ███  ", "    █ ", " ███  " },
    ['6'] = new[] { "  ██  ", " █    ", " ███  ", " █  █ ", "  ██  " },
    ['7'] = new[] { " ████ ", "    █ ", "   █  ", "  █   ", "  █   " },
    ['8'] = new[] { "  ██  ", " █  █ ", "  ██  ", " █  █ ", "  ██  " },
    ['9'] = new[] { "  ██  ", " █  █ ", "  ███ ", "    █ ", "  ██  " },
    ['!'] = new[] { "  █  ", "  █  ", "  █  ", "     ", "  █  " },
    ['?'] = new[] { " ███ ", "    █", "  ██ ", "     ", "  █  " },
    [' '] = new[] { "    ", "    ", "    ", "    ", "    " },
    ['-'] = new[] { "     ", "     ", " ███ ", "     ", "     " },
    ['.'] = new[] { "   ", "   ", "   ", "   ", " █ " },
    [','] = new[] { "   ", "   ", "   ", " █ ", " █ " },
    [':'] = new[] { "   ", " █ ", "   ", " █ ", "   " },
    [';'] = new[] { "   ", " █ ", "   ", " █ ", " █ " },
    ['\''] = new[] { " █ ", " █ ", "   ", "   ", "   " },
    ['"'] = new[] { " █ █ ", " █ █ ", "     ", "     ", "     " },
    ['('] = new[] { "  █ ", " █  ", " █  ", " █  ", "  █ " },
    [')'] = new[] { " █  ", "  █ ", "  █ ", "  █ ", " █  " },
    ['['] = new[] { " ██ ", " █  ", " █  ", " █  ", " ██ " },
    [']'] = new[] { " ██ ", "  █ ", "  █ ", "  █ ", " ██ " },
    ['+'] = new[] { "     ", "  █  ", " ███ ", "  █  ", "     " },
    ['*'] = new[] { "     ", " █ █ ", "  █  ", " █ █ ", "     " },
    ['='] = new[] { "     ", " ███ ", "     ", " ███ ", "     " },
    ['/'] = new[] { "    █", "   █ ", "  █  ", " █   ", "█    " },
    ['\\'] = new[] { "█    ", " █   ", "  █  ", "   █ ", "    █" },
    ['_'] = new[] { "     ", "     ", "     ", "     ", " ███ " },
};


    public static void Write(string text, ConsoleColor? color = null)
    {
        var lines = new string[5];
        foreach (var ch in text.ToUpperInvariant())
        {
            var glyph = Font.TryGetValue(ch, out var g) ? g : Font['?'];
            for (int i = 0; i < 5; i++)
                lines[i] += glyph[i] + " ";
        }

        ConsoleX.WithColor(color, null, () =>
        {
            foreach (var l in lines) Console.WriteLine(l);
        });
    }
}
